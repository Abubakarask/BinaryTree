import queue
"""Print in lvl Traversal"""
"""O/P: 1 2 3 4 None"""
def lvlTransversal(root):
    if root is None:
        return

    q = queue.Queue()
    q.put(root)
    q.put(None)

    while not q.empty():
        curr = q.get()
        if curr is None:
            if q.empty():
                return
            q.put(None)
            print()
            continue
        print(curr.data, end=" ")

        if curr.left:
            q.put(curr.left)

        if curr.right:
            q.put(curr.right)

lvlTransversal(root)


"""Put the values in level traversal order"""
"""O/P: [1, 2, 3, 4, None]"""
def levelTraversal(root):
    res = []
    i = 1
    if root is None:
        return res

    q = queue.Queue()
    res.append([root.data])
    res.append([])
    q.put(root)
    q.put(None)

    while not q.empty():
        print("h")
        curr = q.get()
        if curr is None:
            if q.empty():
                return
            # q.get()
            q.put(None)
            res.append([])
            i+=1
            print("here")
            continue
        # print(curr.data, end=" ")

        if curr.left:
            res[i].append(curr.left.data)
            q.put(curr.left)

        if curr.right:
            res[i].append(curr.right.data)
            q.put(curr.left)

    return res
print(levelTraversal(root))
